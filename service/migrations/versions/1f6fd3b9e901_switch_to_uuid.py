"""Switch to uuid

Revision ID: 1f6fd3b9e901
Revises: 474420e93417
Create Date: 2025-05-17 13:03:29.456477

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1f6fd3b9e901"
down_revision: Union[str, None] = "474420e93417"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "business_entity",
        "definition",
        existing_type=sa.VARCHAR(),
        type_=sa.Text(),
        existing_nullable=True,
    )
    op.alter_column(
        "business_entity",
        "report",
        existing_type=sa.TEXT(),
        type_=sa.String(),
        existing_nullable=True,
    )
    op.alter_column(
        "business_entity", "database_id", existing_type=sa.UUID(), nullable=False
    )
    op.drop_column("business_entity", "review_conversation_id_int")
    op.drop_column("business_entity", "id_int")
    op.drop_column("business_entity", "database_id_int")
    op.drop_column("chart", "id_int")
    op.drop_column("chart", "queryId_int")
    op.alter_column(
        "conversation", "databaseId", existing_type=sa.UUID(), nullable=False
    )
    op.drop_column("conversation", "projectId_int")
    op.drop_column("conversation", "databaseId_int")
    op.drop_column("conversation", "id_int")
    op.alter_column(
        "conversation_message",
        "conversationId",
        existing_type=sa.UUID(),
        nullable=False,
    )
    op.drop_column("conversation_message", "chartId_int")
    op.drop_column("conversation_message", "queryId_int")
    op.drop_column("conversation_message", "id_int")
    op.drop_column("conversation_message", "conversationId_int")
    op.drop_column("database", "id_int")
    op.drop_column("issues", "business_entity_id_int")
    op.drop_column("issues", "id_int")
    op.drop_column("issues", "message_id_int")
    op.drop_column("issues", "database_id_int")
    op.drop_column("note", "projectId_int")
    op.drop_column("note", "id_int")
    op.alter_column("project", "databaseId", existing_type=sa.UUID(), nullable=False)
    op.drop_column("project", "databaseId_int")
    op.drop_column("project", "id_int")
    op.alter_column(
        "project_tables", "projectId", existing_type=sa.UUID(), nullable=False
    )
    op.drop_column("project_tables", "projectId_int")
    op.drop_column("project_tables", "id_int")
    op.alter_column("query", "databaseId", existing_type=sa.UUID(), nullable=False)
    op.drop_column("query", "databaseId_int")
    op.drop_column("query", "id_int")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "query",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('query_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "query",
        sa.Column("databaseId_int", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.alter_column("query", "databaseId", existing_type=sa.UUID(), nullable=True)
    op.add_column(
        "project_tables",
        sa.Column("id_int", sa.INTEGER(), autoincrement=True, nullable=False),
    )
    op.add_column(
        "project_tables",
        sa.Column("projectId_int", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.alter_column(
        "project_tables", "projectId", existing_type=sa.UUID(), nullable=True
    )
    op.add_column(
        "project",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('project_id_seq1'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "project",
        sa.Column("databaseId_int", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.alter_column("project", "databaseId", existing_type=sa.UUID(), nullable=True)
    op.add_column(
        "note", sa.Column("id_int", sa.INTEGER(), autoincrement=True, nullable=False)
    )
    op.add_column(
        "note",
        sa.Column("projectId_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "issues",
        sa.Column("database_id_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "issues",
        sa.Column("message_id_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "issues",
        sa.Column("id_int", sa.VARCHAR(length=36), autoincrement=False, nullable=False),
    )
    op.add_column(
        "issues",
        sa.Column(
            "business_entity_id_int", sa.INTEGER(), autoincrement=False, nullable=True
        ),
    )
    op.add_column(
        "database",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('database_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "conversation_message",
        sa.Column(
            "conversationId_int", sa.INTEGER(), autoincrement=False, nullable=False
        ),
    )
    op.add_column(
        "conversation_message",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('conversation_message_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "conversation_message",
        sa.Column("queryId_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "conversation_message",
        sa.Column("chartId_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.alter_column(
        "conversation_message", "conversationId", existing_type=sa.UUID(), nullable=True
    )
    op.add_column(
        "conversation",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('conversation_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "conversation",
        sa.Column("databaseId_int", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "conversation",
        sa.Column("projectId_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.alter_column(
        "conversation", "databaseId", existing_type=sa.UUID(), nullable=True
    )
    op.add_column(
        "chart",
        sa.Column("queryId_int", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "chart",
        sa.Column(
            "id_int",
            sa.INTEGER(),
            server_default=sa.text("nextval('chart_id_seq'::regclass)"),
            autoincrement=True,
            nullable=False,
        ),
    )
    op.add_column(
        "business_entity",
        sa.Column("database_id_int", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "business_entity",
        sa.Column("id_int", sa.INTEGER(), autoincrement=True, nullable=False),
    )
    op.add_column(
        "business_entity",
        sa.Column(
            "review_conversation_id_int",
            sa.INTEGER(),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.alter_column(
        "business_entity", "database_id", existing_type=sa.UUID(), nullable=True
    )
    op.alter_column(
        "business_entity",
        "report",
        existing_type=sa.String(),
        type_=sa.TEXT(),
        existing_nullable=True,
    )
    op.alter_column(
        "business_entity",
        "definition",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(),
        existing_nullable=True,
    )
    # ### end Alembic commands ###
