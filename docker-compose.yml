services:
  db:
    image: postgres:17
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ada
      POSTGRES_USER: human
      POSTGRES_PASSWORD: pass
    ports: # For debugging purpose, we expose the Postgres port
      - "2345:5432" # To avoid conflicts with other Postgres instances
    networks:
      - myriade-network

  service:
    build: ./service
    image: myriadeai/myriade-service:latest
    volumes:
      - logs:/var/log/gunicorn
    depends_on:
      - db
    environment:
      FLASK_APP: app.py
      FLASK_ENV: production
      DATABASE_URL: postgresql://human:pass@db:5432/ada
      HOST: ${HOST}
      AUTOCHAT_PROVIDER: anthropic
      AUTOCHAT_MODEL: claude-sonnet-4
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY} # If you want to use OpenAI, set this
      # Optional
      WORKOS_API_KEY: ${WORKOS_API_KEY}
      WORKOS_CLIENT_ID: ${WORKOS_CLIENT_ID}
      WORKOS_ORGANIZATION_ID: ${WORKOS_ORGANIZATION_ID}
      COOKIE_PASSWORD: ${COOKIE_PASSWORD}
      # Ignore
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
    networks:
      - myriade-network

  view:
    build: ./view
    image: myriadeai/myriade-view:latest
    depends_on:
      - service
    networks:
      - myriade-network

  proxy:
    image: nginx:alpine
    volumes:
      - ./proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro # Mount nginx config read-only
    ports:
      - "8080:80" # Expose proxy on host port 8080
    depends_on:
      - service
      - view
    networks:
      - myriade-network

networks:
  myriade-network:
    driver: bridge

volumes:
  postgres_data:
  logs:
