upstream service {
    server service:4000;
}

upstream view {
    server view:80;
}

server {
    listen 80;

    location /api/ {
        proxy_pass http://service;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # We need to rewrite the path to the API to the service
        rewrite ^/api/(.*)$ /$1 break;
    }

    location /auth/ {
        proxy_pass http://service;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # We need to rewrite the path to the API to the service
        rewrite ^/auth/(.*)$ /$1 break;
    }


    # Websockets for socket.io
    location /socket.io/ {
        proxy_pass http://service/socket.io/;
        proxy_http_version 1.1;

        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Add these for WebSocket support
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    location / {
        proxy_pass http://view;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
    
    # Optional: Add error pages, client max body size etc. as needed
    # client_max_body_size 100M;
} 